#include<bits/stdc++.h>
using namespace std;
int dp[1001][1001];
bool ispresent(vector<int>v,int sum,int n)
{
  if(dp[sum][n]!=-1)
  return dp[sum][n];
  if(sum==0)
  return dp[sum][n]=true;
  if(sum>0&&n==0)
  return dp[sum][n]=false;
  return dp[sum][n]=ispresent(v,sum,n-1)||ispresent(v,sum-v[n-1],n-1);
}
int main()
{
  int n,sum;
  cin>>n;
  vector<int>v;
  int a;
  for(int i=0;i<n;i++)
  {
    cin>>a;
    v.push_back(a);
  }
  cin>>sum;
  memset(dp,-1,sizeof(dp));
  cout<<ispresent(v,sum,n);
}
time complexity:O(n^2)
space complexity:O(n^2)
